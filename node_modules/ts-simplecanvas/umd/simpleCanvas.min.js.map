{"version":3,"sources":["webpack://SimpleCanvas/webpack/universalModuleDefinition","webpack://SimpleCanvas/webpack/bootstrap","webpack://SimpleCanvas/./src/index.ts"],"names":["root","factory","exports","module","define","amd","SimpleCanvas","window","e","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","container","containerElement","document","getElementById","tagName","this","canvas","createElement","dimensions","getBoundingClientRect","width","height","context","getContext","drawRect","x","y","strokeColor","lineWidth","fillColor","alpha","globalAlpha","fillStyle","fillRect","strokeStyle","strokeRect","drawLine","x1","y1","x2","y2","color","beginPath","moveTo","lineTo","stroke","drawCircle","radius","arc","Math","PI","closePath","fill","drawImage","src","img","Image","onload"],"mappings":"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","file":"simpleCanvas.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"SimpleCanvas\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SimpleCanvas\"] = factory();\n\telse\n\t\troot[\"SimpleCanvas\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","\nexport default class SimpleCanvas {\n    constructor(container: string | HTMLElement) {\n        let containerElement: HTMLElement;\n        if (typeof container == \"string\")\n            containerElement = document.getElementById(container);\n        else\n            containerElement = container;\n\n        if (containerElement.tagName == \"CANVAS\") {\n            this.canvas = containerElement as HTMLCanvasElement;\n        }\n        else {\n            this.canvas = document.createElement(\"canvas\");\n            var dimensions = containerElement.getBoundingClientRect()\n            this.canvas.width = dimensions.width;\n            this.canvas.height = dimensions.height;\n        }\n        this.context = this.canvas.getContext(\"2d\");\n    }\n\n    //#region Member variables\n\n    canvas: HTMLCanvasElement;\n    context: CanvasRenderingContext2D;\n\n    //#endregion\n\n    drawRect(x: number, y: number, width: number, height: number, strokeColor: string = \"black\", lineWidth: number = 1, fillColor: string = \"\", alpha: number = 1) {\n        var context = this.context;\n        context.globalAlpha = alpha;\n        if (fillColor) {\n            context.fillStyle = fillColor;\n            context.fillRect(x, y, width, height);\n        }\n        if (lineWidth) {\n            context.strokeStyle = strokeColor;\n            context.lineWidth = lineWidth;\n            context.strokeRect(x, y, width, height);\n        }\n    }\n    drawLine(x1: number, y1: number, x2: number, y2: number, color: string = \"black\", lineWidth: number = 1, alpha: number = 1) {\n        var context = this.context;\n        context.globalAlpha = alpha;\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        if (lineWidth) {\n            context.strokeStyle = color;\n            context.lineWidth = lineWidth;\n            context.stroke();\n        }\n    }\n    drawCircle(x: number, y: number, radius: number, strokeColor: string = \"black\", lineWidth: number = 1, fillColor: string = \"\", alpha: number = 1) {\n        var context = this.context;\n        context.beginPath();\n        context.lineWidth = lineWidth;\n        context.globalAlpha = alpha;\n        context.arc(x, y, radius, 0, Math.PI * 2, true);\n        context.closePath();\n        if (lineWidth) {\n            context.strokeStyle = strokeColor;\n            context.stroke();\n        }\n        if (fillColor) {\n            context.fillStyle = fillColor;\n            context.fill();\n        }\n    }\n    drawImage(src: string, x: number, y: number, width: number, height: number, alpha: number = 1) {\n        var context = this.context;\n        var img = new Image();\n        img.src = src;\n        context.globalAlpha = alpha;\n        img.onload = function () {\n            context.drawImage(img, x, y, width, height);\n        };\n    }\n}\n"],"sourceRoot":""}